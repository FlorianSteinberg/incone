From mathcomp Require Import ssreflect ssrfun ssrnat ssrbool eqtype choice seq.
From mf Require Import all_mf.

Set Implicit Arguments.
Unset Strict Implicit.
Unset Printing Implicit Defensive.

From mathcomp Require Import ssreflect ssrfun ssrnat ssrbool eqtype choice seq.
From mf Require Import all_mf.
Require Import iseg.

Section GL2MF.
  Context (T T': Type).
  Implicit Types (KL: seq (T * T')) (phi: T -> T').
  Definition G2MF (G: subset (T * T')):= make_mf (fun s t => (s,t) \from G).

  Lemma G2MF_eq (G G': subset (T * T')): G === G' <-> G2MF G =~= G2MF G'.
  Proof. by split => [eq s t | eq [s t]]; apply/eq. Qed.
  
  Definition GL2MF (KL: seq (T * T')):= G2MF (L2SS KL).

  Definition F2GL phi K := zip K (map phi K).

  Lemma icf_GL2MF phi K: phi \is_choice_for (GL2MF (F2GL phi K)).
  Proof.
    elim: K => [q [] | q L ih q' [a /=[[<-] | lstn]]] //=; first by left.
    by right; apply/ih; exists a.
  Qed.
End GL2MF.